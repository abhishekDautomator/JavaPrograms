1. Explain method chaining?
Ans. Method chaining in Java is a programming technique that allows multiple method calls to be linked
together in a single line of code. This is accomplished by having each method return the object itself
(usually this), enabling subsequent method calls on the same object without needing to repeatedly
reference it.

     Key Features of Method Chaining
     Fluent Interface: Method chaining often leads to a more readable and expressive code, resembling
     natural language. This is commonly seen in libraries that implement a fluent interface.

     Improved Readability: By chaining methods, you can reduce the number of lines of code and improve readability, making it easier to understand the sequence of operations being performed.

     Encapsulation: It allows for better encapsulation of behavior within an object,
     as the methods can operate on the same instance without needing to expose its state explicitly after
     each call.

     Use Cases
     Method chaining is frequently used in various Java frameworks and libraries, such as:

     Java Streams API: Allows for chaining operations like filter(), map(), and collect().
     Building SQL Queries: Libraries like JOOQ or Hibernate use method chaining for constructing complex queries.
     Configuration Objects: Frameworks often allow configuration through method chaining for setting properties.

     Conclusion
     Method chaining is a powerful technique in Java that enhances code readability and maintainability.
     By returning this from methods, you can create a clean and fluent interface that allows for concise and expressive code.